<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Squid Game Symbols — Animated</title>
<style>
  :root{
    --bg:#000; --stroke:#ffffff; --dot:#ff2d78;   /* pink dot */
    --w: clamp(92px, 22vw, 180px);                /* symbol size */
    --thick: 14;                                  /* line thickness */
    --gap: 45;                                    /* stroke gap length */
    --drawTime: 1.1s;                             /* time to “draw” a line */
    --rideTime: 1.2s;                             /* time for dot to travel */
    --stagger: .65s;                              /* delay between symbols */
  }

  html,body{height:100%}
  body{
    margin:0; background:var(--bg); color:#ddd;
    display:flex; align-items:center; justify-content:center;
    font:14px/1.4 system-ui, -apple-system, Segoe UI, Roboto, Arial;
    overflow:hidden;
  }

  .row{display:flex; gap:clamp(20px,7vw,60px); align-items:center; padding:6vh 6vw;}

  .symbol{width:var(--w); height:var(--w);}
  svg{width:100%; height:100%; overflow:visible}

  /* white neon stroke */
  .shape{
    fill:none;
    stroke:var(--stroke);
    stroke-width:var(--thick);
    stroke-linecap:round; stroke-linejoin:round;
    filter: drop-shadow(0 0 6px rgba(255,255,255,.6))
            drop-shadow(0 0 18px rgba(255,255,255,.35));
    /* draw-on effect with a “gap” so ends look open */
    stroke-dasharray: calc(1000 - var(--gap)) var(--gap);
    stroke-dashoffset: 1000;
    animation: draw var(--drawTime) ease forwards var(--delay);
  }

  /* glowing pink dot */
  .dot{ fill: var(--dot); filter: drop-shadow(0 0 6px var(--dot)) drop-shadow(0 0 16px var(--dot)); }

  /* looped gentle glow breathing */
  .glow { animation: breath 3s ease-in-out infinite 1.8s; }

  /* sequence timing */
  .symbol:nth-child(1){ --delay: 0s; }
  .symbol:nth-child(2){ --delay: var(--stagger); }
  .symbol:nth-child(3){ --delay: calc(var(--stagger) * 2); }

  @keyframes draw { to { stroke-dashoffset: 0; } }
  @keyframes breath {
    0%,100% { filter: drop-shadow(0 0 6px rgba(255,255,255,.6)) drop-shadow(0 0 18px rgba(255,255,255,.35)); }
    50%     { filter: drop-shadow(0 0 12px rgba(255,255,255,.9)) drop-shadow(0 0 30px rgba(255,255,255,.6)); }
  }

  /* Reduce motion accessibility */
  @media (prefers-reduced-motion: reduce){
    .shape{ animation: none; stroke-dashoffset: 0; }
    .glow { animation: none; }
    animateMotion{ display:none; }
  }
</style>
</head>
<body>
  <div class="row" aria-label="Animated Squid Game symbols">
    <!-- CIRCLE with a small gap -->
    <div class="symbol" aria-hidden="true">
      <svg viewBox="0 0 200 200" role="img">
        <!-- circular path (hidden) -->
        <path id="pCircle" d="
          M 100,35
          A 65 65 0 1 1 99.99,35
        " fill="none" />
        <!-- visible stroke (uses dash to create opening) -->
        <circle class="shape glow" cx="100" cy="100" r="65" />
        <!-- pink dot riding the path -->
        <circle class="dot" r="7">
          <animateMotion dur="var(--rideTime)" begin="var(--delay)" repeatCount="1" fill="freeze" keySplines=".3 0 .2 1" keyTimes="0;1" calcMode="spline">
            <mpath xlink:href="#pCircle"/>
          </animateMotion>
          <!-- loop: wait until all three finished, then restart sequence -->
          <animateMotion dur="var(--rideTime)" begin="cLoop.begin" repeatCount="1" fill="freeze">
            <mpath xlink:href="#pCircle"/>
          </animateMotion>
        </circle>
      </svg>
    </div>

    <!-- TRIANGLE caret (open at top) -->
    <div class="symbol" aria-hidden="true">
      <svg viewBox="0 0 200 200" role="img">
        <path id="pTri" d="M 45,155 L 100,50 L 155,155" fill="none"/>
        <path class="shape glow" d="M 45,155 L 100,50 L 155,155" />
        <circle class="dot" r="7">
          <animateMotion dur="var(--rideTime)" begin="calc(var(--delay) + .05s)" repeatCount="1" fill="freeze" keySplines=".3 0 .2 1" keyTimes="0;1" calcMode="spline">
            <mpath xlink:href="#pTri"/>
          </animateMotion>
          <animateMotion dur="var(--rideTime)" begin="cLoop.begin+.05s" repeatCount="1" fill="freeze">
            <mpath xlink:href="#pTri"/>
          </animateMotion>
        </circle>
      </svg>
    </div>

    <!-- SQUARE with a missing top-right corner -->
    <div class="symbol" aria-hidden="true">
      <svg viewBox="0 0 200 200" role="img">
        <!-- path goes from left-bottom -> right-bottom -> right-top (stop early for the gap) -->
        <path id="pSquare" d="M 45,155 H 155 V 55" fill="none"/>
        <path class="shape glow" d="M 45,155 H 155 V 55" />
        <circle class="dot" r="7">
          <animateMotion dur="var(--rideTime)" begin="calc(var(--delay) + .1s)" repeatCount="1" fill="freeze" keySplines=".3 0 .2 1" keyTimes="0;1" calcMode="spline">
            <mpath xlink:href="#pSquare"/>
          </animateMotion>
          <animateMotion dur="var(--rideTime)" begin="cLoop.begin+.1s" repeatCount="1" fill="freeze">
            <mpath xlink:href="#pSquare"/>
          </animateMotion>
        </circle>
      </svg>
    </div>
  </div>

  <!-- Invisible timer to restart the whole sequence forever -->
  <svg width="0" height="0" style="position:absolute">
    <rect width="1" height="1" fill="none">
      <!-- total cycle length = first draw start (0s) through last dot ride -->
      <animate id="cLoop" attributeName="x" from="0" to="1"
               dur="calc(var(--stagger)*2 + var(--rideTime) + .6s)"
               begin="0s;cLoop.end" />
    </rect>
  </svg>
</body>
</html>
